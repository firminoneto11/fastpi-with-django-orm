"""
Django settings for conf project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import tomllib
from pathlib import Path
from typing import cast

from shared.utils import get_env

with open("pyproject.toml", mode="rb") as stream:
    pyproject: dict[str, str] = tomllib.load(stream)["project"]

APP_NAME = pyproject["name"]
APP_DESCRIPTION = pyproject["description"]
APP_VERSION = pyproject["version"]

DOCS_URL = "/docs"
REDOC_URL = None
OPENAPI_URL = "/openapi.json"

TITLE = "Django + FastAPI"

ENVIRONMENT_PREFIX = "PROJECT_"

ALLOWED_ENVIRONMENTS = ("production", "staging", "development", "testing")

ALLOWED_ORIGINS = ["*"]

API_PATH = "/api"

ADMIN_PATH = "/admin"

with get_env().prefixed(ENVIRONMENT_PREFIX) as env:
    SECRET_KEY = cast(str, env.str("SECRET_KEY"))  # type: ignore

BASE_DIR = Path(__file__).resolve().parent.parent.parent

DEBUG = False

BASE_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

THIRD_PARTY_APPS = []

LOCAL_APPS = ["src.domain._core"]

INSTALLED_APPS = BASE_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "conf.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "conf.wsgi.application"
ASGI_APPLICATION = "conf.asgi.application"

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # noqa
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "staticfiles/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


def GET_ASGI_SETTINGS(main_mount: bool = False):
    return {
        "title": APP_NAME,
        "description": APP_DESCRIPTION,
        "version": APP_VERSION,
        "debug": DEBUG,
        "docs_url": None if main_mount else DOCS_URL,
        "openapi_url": None if main_mount else OPENAPI_URL,
        "redoc_url": None if main_mount else REDOC_URL,
    }
